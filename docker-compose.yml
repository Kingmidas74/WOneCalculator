version: "3"
services:

    webapi_service:
        build:
          context: .
          dockerfile: ./AppServices/WebAPIService/Dockerfile     
        restart: unless-stopped
        expose:
          - 5002
        environment: 
          API_DB_HOST: "db"
          API_DB_PORT: "5432"
          API_DB_USER: "postgres"
          API_DB_PASSWORD: "IlJU7f71Vh7rM1yv"
          PIS_HOST: "identity_service"
          PIS_PORT: "5000"
          ASPNETCORE_ENVIRONMENT: "Development" 
        depends_on:    
          -  identity_service  
          
          
    identity_service:
        build:
          context: .
          dockerfile: ./AppServices/IdentityService/Dockerfile        
        restart: unless-stopped
        expose:
          - 5000
        environment: 
          PIS_DB_HOST: "db"
          PIS_DB_PORT: "5432"
          PIS_DB_USER: "postgres"
          PIS_DB_PASSWORD: "IlJU7f71Vh7rM1yv"
          ASPNETCORE_ENVIRONMENT: "Development"
        depends_on:
          -  db     


    db:
        image: postgres:11.7-alpine
        volumes: 
          - pg_data:/var/lib/postgresql/data        
        ports: 
          - 5435:5432
        restart: unless-stopped
        environment:
            PGDATA: "/var/lib/postgresql/data/pgdata"
            POSTGRES_PASSWORD: "IlJU7f71Vh7rM1yv"
            POSTGRES_USER: "postgres"

    
    # angular:
    #   build:
    #     context: .
    #     dockerfile: ./ClientApplications/Angular/Dockerfile        
    #   container_name: angular
    #   restart: unless-stopped
    #   ports:
    #     - 8888:80
    #   environment: 
    #     API_URI: "webapi_nginx:8989/api"
    #     IS_URI:  "identity_nginx:8989"
    #   depends_on:        
    #     - identity_nginx
    #     - webapi_nginx   


    webapi_nginx:
      build: 
        context: .
        dockerfile: ./AppServices/WebAPIService/nginx/Dockerfile
      container_name: webapi_nginx
      restart: unless-stopped
      ports:
        - 5002:8989
      depends_on: 
        - webapi_service
    

    identity_nginx:
      build: 
        context: .
        dockerfile: ./AppServices/IdentityService/nginx/Dockerfile
      container_name: identity_nginx
      restart: unless-stopped
      ports:
        - 5000:8989
      depends_on: 
        - identity_service
      
  
volumes: 
  pg_data:

